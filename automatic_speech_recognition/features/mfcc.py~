import numpy as np
import python_speech_features
from tensorflow.python.ops import gen_audio_ops as contrib_audio
import tensorflow as tf
from .. import features

class MFCC(features.FeaturesExtractor):

    def __init__(self,
                 features_num: int,
                 is_standardization=False, sample_rate=16000, 
                 winlen=0.02, winstep=0.01):
        super().__init__()
        self.features_num = features_num
        self.is_standardization = is_standardization
        self.sample_rate = sample_rate
        self.window_size = int(winlen * sample_rate)
        self.window_step = int(winstep * sample_rate)

    def make_features(self, audio: np.ndarray) -> np.ndarray:
        """ Use Tensorflow  lib to extract log filter banks from
        the features file. """
        spectrogram = contrib_audio.audio_spectrogram(
            audio,
            window_size=self.window_size,
            stride=self.window_step,
            magnitude_squared=True)
        mfccs = contrib_audio.mfcc(
            spectrogram=spectrogram,
            sample_rate=self.sample_rate,
            dct_coefficient_count=self.features_num,
            upper_frequency_limit=8000)
        # take the first channel only
        return self.standardize(mfccs[0]) if self.is_standardization else mfccs[0]
